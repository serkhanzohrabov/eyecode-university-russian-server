// export const questions = [
//   // HTML / CSS (10 вопросов)
//   {
//     id: 1,
//     question: "Какой тег используется для создания гиперссылки?",
//     answer: "<a>",
//     options: ["<a>", "<link>", "<href>", "<url>"]
//   },
//   {
//     id: 2,
//     question: "Какой тег используется для вставки изображения?",
//     answer: "<img>",
//     options: ["<image>", "<src>","<img>", "<pic>"]
//   },
//   {
//     id: 3,
//     question: "Какой атрибут используется для добавления всплывающей подсказки при наведении?",
//     answer: "title",
//     options: [ "alt", "hover", "tooltip","title"]
//   },
//   {
//     id: 4,
//     question: "Какой тег обозначает таблицу в HTML?",
//     answer: "<table>",
//     options: [ "<tab>","<table>", "<grid>", "<tbody>"]
//   },
//   {
//     id: 5,
//     question: "Какое CSS-свойство отвечает за размер шрифта?",
//     answer: "font-size",
//     options: [ "text-size","font-size", "font-style", "size"]
//   },
//   {
//     id: 6,
//     question: "Какой селектор выбирает все элементы с классом .button?",
//     answer: ".button",
//     options: [".button", "#button", "button", "*button"]
//   },
//   {
//     id: 7,
//     question: "Как задать жирный текст в CSS?",
//     answer: "font-weight: bold;",
//     options: ["font-weight: bold;", "text-weight: bold;", "font-style: bold;", "font: bold;"]
//   },
//   {
//     id: 8,
//     question: "Что делает свойство `position: fixed;`?",
//     answer: "Закрепляет элемент на экране",
//     options: [
//       "Закрепляет элемент на экране",
//       "Позиционирует относительно родителя",
//       "Скрывает элемент",
//       "Центрирует элемент"
//     ]
//   },
//   {
//     id: 9,
//     question: "Как задать отступ внутри элемента?",
//     answer: "padding",
//     options: ["padding", "margin", "space", "gap"]
//   },
//   {
//     id: 10,
//     question: "Что делает тег <br>?",
//     answer: "Добавляет перенос строки",
//     options: [
//       "Добавляет перенос строки",
//       "Жирный текст",
//       "Создаёт раздел",
//       "Вставляет картинку"
//     ]
//   },
//   {
//     id: 11,
//     question: "Как объявить переменную?",
//     answer: "let x = 5;",
//     options: ["let x = 5;", "variable x = 5;", "int x = 5;", "x := 5;"]
//   },
//   {
//     id: 12,
//     question: "Какой метод выводит сообщение в консоль?",
//     answer: "console.log()",
//     options: ["console.log()", "log()", "alert()", "print()"]
//   },
//   {
//     id: 13,
//     question: "Какой тип данных представляет логическое значение?",
//     answer: "boolean",
//     options: ["boolean", "string", "number", "null"]
//   },
//   {
//     id: 14,
//     question: "Как проверить строгое равенство в JavaScript?",
//     answer: "===",
//     options: ["===", "==", "=", "!="]
//   },
//   {
//     id: 15,
//     question: "Что делает `typeof`?",
//     answer: "Определяет тип значения",
//     options: [
//       "Определяет тип значения",
//       "Проверяет наличие свойства",
//       "Изменяет тип",
//       "Проверяет на null"
//     ]
//   },
//   {
//     id: 16,
//     question: "Какой результат у выражения: `typeof null`?",
//     answer: "object",
//     options: ["object", "null", "undefined", "boolean"]
//   },
//   {
//     id: 17,
//     question: "Что вернёт `Boolean('')`?",
//     answer: "false",
//     options: ["false", "true", "null", "undefined"]
//   },
//   {
//     id: 18,
//     question: "Какой метод используется для добавления элемента в конец массива?",
//     answer: "push()",
//     options: ["push()", "pop()", "shift()", "unshift()"]
//   },
//   {
//     id: 19,
//     question: "Какой метод преобразует JSON-строку в объект?",
//     answer: "JSON.parse()",
//     options: ["JSON.parse()", "JSON.stringify()", "parseJSON()", "toObject()"]
//   },
//   {
//     id: 20,
//     question: "Что делает метод `addEventListener`?",
//     answer: "Добавляет обработчик события",
//     options: [
//       "Добавляет обработчик события",
//       "Удаляет элемент",
//       "Создаёт элемент",
//       "Меняет стиль"
//     ]
//   },
//   {
//     id: 21,
//     question: "Что такое NaN в JavaScript?",
//     answer: "Результат недопустимой математической операции",
//     options: [
//       "Результат недопустимой математической операции",
//       "Неверный тип",
//       "Тип undefined",
//       "Ошибка компиляции"
//     ]
//   },
//   {
//     id: 22,
//     question: "Какой метод используется для удаления последнего элемента массива?",
//     answer: "pop()",
//     options: ["pop()", "shift()", "splice()", "remove()"]
//   },
//   {
//     id: 23,
//     question: "Что делает цикл `for`?",
//     answer: "Выполняет код определённое количество раз",
//     options: [
//       "Выполняет код определённое количество раз",
//       "Ждёт завершения задачи",
//       "Удаляет элементы",
//       "Проверяет тип"
//     ]
//   },
//   {
//     id: 24,
//     question: "Какое ключевое слово используется для создания функции?",
//     answer: "function",
//     options: ["function", "func", "def", "method"]
//   },
//   {
//     id: 25,
//     question: "Какой символ используется для однострочного комментария?",
//     answer: "//",
//     options: ["//", "/*", "<!--", "#"]
//   },
//   {
//     id: 26,
//     question: "Какое значение по умолчанию у неинициализированной переменной?",
//     answer: "undefined",
//     options: ["undefined", "null", "0", "NaN"]
//   },
//   {
//     id: 27,
//     question: "Как вызвать функцию `myFunc`?",
//     answer: "myFunc()",
//     options: ["myFunc()", "call myFunc", "run myFunc", "invoke(myFunc)"]
//   },
//   {
//     id: 28,
//     question: "Что такое массив?",
//     answer: "Упорядоченная коллекция значений",
//     options: [
//       "Упорядоченная коллекция значений",
//       "Пара ключ-значение",
//       "Функция",
//       "Стиль отображения"
//     ]
//   },
//   {
//     id: 29,
//     question: "Что делает метод `filter()`?",
//     answer: "Создает массив, отфильтровывая элементы",
//     options: [
//       "Создает массив, отфильтровывая элементы",
//       "Сортирует массив",
//       "Проверяет тип",
//       "Удаляет объект"
//     ]
//   },
//   {
//     id: 30,
//     question: "Что делает метод `includes()`?",
//     answer: "Проверяет, содержит ли массив значение",
//     options: [
//       "Проверяет, содержит ли массив значение",
//       "Добавляет элемент в массив",
//       "Удаляет элемент",
//       "Изменяет массив"
//     ]
//   }
// ]

// export const questions = [
//   {
//     id: 1,
//     question: "Какой тег используется для создания списка с нумерацией?",
//     answer: "<ol>",
//     options: ["<ul>", "<ol>", "<li>", "<list>"]
//   },
//   {
//     id: 2,
//     question: "Какое свойство CSS отвечает за внешний отступ элемента?",
//     answer: "margin",
//     options: ["padding", "border", "margin", "space"]
//   },
//   {
//     id: 3,
//     question: "Какой тег используется для наименования таблицы столбцов?",
//     answer: "<th>",
//     options: ["<td>", "<tr>", "<th>", "<col>"]
//   },
//   {
//     id: 4,
//     question: "Какой атрибут используется для указания пути к изображению в теге `<img>`?",
//     answer: "src",
//     options: ["href", "src", "alt", "path"]
//   },
//   {
//     id: 5,
//     question: "Какой тег используется для создания выпадающего списка?",
//     answer: "<select>",
//     options: ["<input>", "<dropdown>", "<select>", "<option>"]
//   },
//   {
//     id: 6,
//     question: "Какой CSS-селектор выбирает элемент по ID?",
//     answer: "#id",
//     options: ["#id", ".id", "id", "$id"]
//   },
//   {
//     id: 7,
//     question: "Какой тег отвечает за жирное начертание текста в HTML?",
//     answer: "<b>",
//     options: ["<strong>", "<b>", "<bold>", "<text-bold>"]
//   },
//   {
//     id: 8,
//     question: "Какой тег используется для создания строки в таблице?",
//     answer: "<tr>",
//     options: ["<tr>", "<td>", "<table-row>", "<row>"]
//   },
//   {
//     id: 9,
//     question: "Как задать цвет фона в CSS?",
//     answer: "background-color",
//     options: ["background", "color-bg", "bg-color", "background-color"]
//   },
//   {
//     id: 10,
//     question: "Какой тег используется для наименования полей формы?",
//     answer: "<label>",
//     options: ["<label>", "<input>", "<form>", "<name>"]
//   },

//   {
//     id: 11,
//     question: "Как объявить переменную, которую нельзя переопределить?",
//     answer: "const",
//     options: [ "let", "static","const", "var"]
//   },
//   {
//     id: 12,
//     question: "Какой оператор используется для сложения чисел?",
//     answer: "+",
//     options: ["+", "*", "-", "="]
//   },
//   {
//     id: 13,
//     question: "Какой тип данных хранит текст?",
//     answer: "string",
//     options: [ "boolean","string", "number", "text"]
//   },
//   {
//     id: 14,
//     question: "Какой символ завершает инструкцию JavaScript?",
//     answer: ";",
//     options: [";", ".", ":", ","]
//   },
//   {
//     id: 15,
//     question: "Что делает метод `alert()`?",
//     answer: "Выводит сообщение в окне браузера",
//     options: [
//       "Выводит сообщение в окне браузера",
//       "Очищает страницу",
//       "Переходит по ссылке",
//       "Показывает HTML-код"
//     ]
//   },
//   {
//     id: 16,
//     question: "Что означает `===` в JavaScript?",
//     answer: "Сравнение по значению и типу",
//     options: [
//       "Сравнение по значению и типу",
//       "Присваивание",
//       "Проверка на null",
//       "Логическое И"
//     ]
//   },
//   {
//     id: 17,
//     question: "Какой тип данных возвращает `true` или `false`?",
//     answer: "boolean",
//     options: [ "string", "null", "number","boolean"]
//   },
//   {
//     id: 18,
//     question: "Как преобразовать строку в число?",
//     answer: "Number()",
//     options: [ "parseText()","Number()", "toInt()", "String()"]
//   },
//   {
//     id: 19,
//     question: "Что делает метод `prompt()`?",
//     answer: "Спрашивает ввод у пользователя",
//     options: [
//       "Спрашивает ввод у пользователя",
//       "Выводит сообщение",
//       "Добавляет элемент",
//       "Удаляет объект"
//     ]
//   },
//  {
//     id:20,
//     question: "Что делает метод Array.prototype.filter?",
//     answer: "Возвращает отфильтрованный массив",
//     options: [
//       "Удаляет дубликаты",
//       "Сортирует массив",
//       "Возвращает отфильтрованный массив",
//       "Создаёт копию массива"
//     ]
//   },
//   {
//     id: 21,
//     question: "Какой символ используется для логического И?",
//     answer: "&&",
//     options: ["&&", "||", "&", "and"]
//   },
// {
//   id: 22,
//   question: "Что делает условный оператор `if`?",
//   answer: "Выполняет код, если условие истинно",
//   options: [
//     "Выполняет код, если условие истинно",
//     "Всегда выполняет код",
//     "Повторяет код несколько раз",
//     "Останавливает выполнение функции"
//   ]
// },
//  {
//     id: 23,
//     question: "Что делает метод Object.keys()?",
//     answer: "Возвращает массив ключей объекта",
//     options: [
//       "Возвращает массив значений",
//       "Создаёт объект",
//       "Возвращает массив ключей объекта",
//       "Удаляет ключи"
//     ]
//   },
//   {
//     id: 24,
//     question: "Какой тип данных может быть результатом выражения `2 > 3`?",
//     answer: "boolean",
//     options: ["boolean", "number", "null", "object"]
//   },
//   {
//     id: 25,
//     question: "Что такое `null` в JavaScript?",
//     answer: "Специальное значение 'ничего'",
//     options: [
//       "Специальное значение 'ничего'",
//       "Ошибка",
//       "Ноль",
//       "Отсутствие переменной"
//     ]
//   },
//   {
//     id: 26,
//     question: "Какой метод массива возвращает его длину?",
//     answer: "length",
//     options: ["length", "size()", "count()", "getLength()"]
//   },
//   {
//     id: 27,
//     question: "Что вернёт выражение `typeof 42`?",
//     answer: "number",
//     options: ["number", "string", "object", "boolean"]
//   },
//   {
//     id: 28,
//     question: "Как задать условие в `if`?",
//     answer: "if (условие) { ... }",
//     options: [
//       "if (условие) { ... }",
//       "if условие: ...",
//       "if {условие}",
//       "if => условие"
//     ]
//   },
//   {
//   id: 29,
//   question: "Что делает оператор `switch` в JavaScript?",
//   answer: "Сравнивает значение с множеством вариантов",
//   options: [
//     "Сравнивает значение с множеством вариантов",
//     "Создаёт новую переменную",
//     "Проверяет тип данных",
//     "Выполняет цикл по массиву"
//   ]
// }
// ,
//   {
//     id: 30,
//     question: "Что делает `Math.random()`?",
//     answer: "Генерирует случайное число",
//     options: [
//       "Генерирует случайное число",
//       "Округляет число",
//       "Проверяет чётность",
//       "Создаёт массив"
//     ]
//   }
// ];

// export const questions = [
//   {
//     id: 1,
//     question: "Какой тег используется для создания списка с нумерацией?",
//     answer: "<ol>",
//     options: ["<ul>", "<ol>", "<li>", "<list>"]
//   },
//   {
//     id: 2,
//     question: "Какое свойство CSS отвечает за внешний отступ элемента?",
//     answer: "margin",
//     options: ["padding", "border", "margin", "space"]
//   },
//   {
//     id: 3,
//     question: "Какой тег используется для наименования таблицы столбцов?",
//     answer: "<th>",
//     options: ["<td>", "<tr>", "<th>", "<col>"]
//   },
//   {
//     id: 4,
//     question: "Какой атрибут используется для указания пути к изображению в теге `<img>`?",
//     answer: "src",
//     options: ["href", "src", "alt", "path"]
//   },
//   {
//     id: 5,
//     question: "Какой тег используется для создания выпадающего списка?",
//     answer: "<select>",
//     options: ["<input>", "<dropdown>", "<select>", "<option>"]
//   },
//   {
//     id: 6,
//     question: "Какой CSS-селектор выбирает элемент по ID?",
//     answer: "#id",
//     options: ["#id", ".id", "id", "$id"]
//   },
//   {
//     id: 7,
//     question: "Какой тег отвечает за жирное начертание текста в HTML?",
//     answer: "<b>",
//     options: ["<strong>", "<b>", "<bold>", "<text-bold>"]
//   },
//   {
//     id: 8,
//     question: "Какой тег используется для создания строки в таблице?",
//     answer: "<tr>",
//     options: ["<tr>", "<td>", "<table-row>", "<row>"]
//   },
//   {
//     id: 9,
//     question: "Как задать цвет фона в CSS?",
//     answer: "background-color",
//     options: ["background", "color-bg", "bg-color", "background-color"]
//   },
//   {
//     id: 10,
//     question: "Какой тег используется для наименования полей формы?",
//     answer: "<label>",
//     options: ["<label>", "<input>", "<form>", "<name>"]
//   },

//   {
//     id: 11,
//     question: "Как объявить переменную, которую нельзя переопределить?",
//     answer: "const",
//     options: [ "let", "static","const", "var"]
//   },
//   {
//     id: 12,
//     question: "Какой оператор используется для сложения чисел?",
//     answer: "+",
//     options: ["+", "*", "-", "="]
//   },
//   {
//     id: 13,
//     question: "Какой тип данных хранит текст?",
//     answer: "string",
//     options: [ "boolean","string", "number", "text"]
//   },
//   {
//     id: 14,
//     question: "Какой символ завершает инструкцию JavaScript?",
//     answer: ";",
//     options: [";", ".", ":", ","]
//   },
//   {
//     id: 15,
//     question: "Что делает метод `alert()`?",
//     answer: "Выводит сообщение в окне браузера",
//     options: [
//       "Выводит сообщение в окне браузера",
//       "Очищает страницу",
//       "Переходит по ссылке",
//       "Показывает HTML-код"
//     ]
//   },
//   {
//     id: 16,
//     question: "Что означает `===` в JavaScript?",
//     answer: "Сравнение по значению и типу",
//     options: [
//       "Сравнение по значению и типу",
//       "Присваивание",
//       "Проверка на null",
//       "Логическое И"
//     ]
//   },
//   {
//     id: 17,
//     question: "Какой тип данных возвращает `true` или `false`?",
//     answer: "boolean",
//     options: [ "string", "null", "number","boolean"]
//   },
//   {
//     id: 18,
//     question: "Как преобразовать строку в число?",
//     answer: "Number()",
//     options: [ "parseText()","Number()", "toInt()", "String()"]
//   },
//   {
//     id: 19,
//     question: "Что делает метод `prompt()`?",
//     answer: "Спрашивает ввод у пользователя",
//     options: [
//       "Спрашивает ввод у пользователя",
//       "Выводит сообщение",
//       "Добавляет элемент",
//       "Удаляет объект"
//     ]
//   },
//  {
//   id: 20,
//   question: "Как работает `setTimeout()`?",
//   answer: "Откладывает выполнение функции на заданное время",
//   options: [
//     "Останавливает выполнение кода",
//     "Повторяет функцию с интервалом",
//     "Откладывает выполнение функции на заданное время",
//     "Синхронно вызывает функцию"
//   ]
// },
//   {
//     id: 21,
//     question: "Какой символ используется для логического И?",
//     answer: "&&",
//     options: ["&&", "||", "&", "and"]
//   },
// {
//   id: 22,
//   question: "Что делает условный оператор `if`?",
//   answer: "Выполняет код, если условие истинно",
//   options: [
//     "Выполняет код, если условие истинно",
//     "Всегда выполняет код",
//     "Повторяет код несколько раз",
//     "Останавливает выполнение функции"
//   ]
// },
//  {
//   id:23,
//   question: "Что произойдет при вызове `console.log(2 + '2')`?",
//   answer: "Будет выведено '22'",
//   options: [
//     "Будет выведено 4",
//     "Будет ошибка",
//     "Будет выведено '22'",
//     "Будет выведено NaN"
//   ]
// },

//   {
//     id: 24,
//     question: "Какой тип данных может быть результатом выражения `2 > 3`?",
//     answer: "boolean",
//     options: ["boolean", "number", "null", "object"]
//   },
//   {
//     id: 25,
//     question: "Что такое `null` в JavaScript?",
//     answer: "Специальное значение 'ничего'",
//     options: [
//       "Специальное значение 'ничего'",
//       "Ошибка",
//       "Ноль",
//       "Отсутствие переменной"
//     ]
//   },
//   {
//     id: 26,
//     question: "Какой метод массива возвращает его длину?",
//     answer: "length",
//     options: ["length", "size()", "count()", "getLength()"]
//   },
//   {
//     id: 27,
//     question: "Что вернёт выражение `typeof 42`?",
//     answer: "number",
//     options: ["number", "string", "object", "boolean"]
//   },
//   {
//     id: 28,
//     question: "Как задать условие в `if`?",
//     answer: "if (условие) { ... }",
//     options: [
//       "if (условие) { ... }",
//       "if условие: ...",
//       "if {условие}",
//       "if => условие"
//     ]
//   },
//   {
//   id: 29,
//   question: "Что делает оператор `switch` в JavaScript?",
//   answer: "Сравнивает значение с множеством вариантов",
//   options: [
//     "Сравнивает значение с множеством вариантов",
//     "Создаёт новую переменную",
//     "Проверяет тип данных",
//     "Выполняет цикл по массиву"
//   ]
// }
// ,
//   {
//     id: 30,
//     question: "Что делает `Math.random()`?",
//     answer: "Генерирует случайное число",
//     options: [
//       "Генерирует случайное число",
//       "Округляет число",
//       "Проверяет чётность",
//       "Создаёт массив"
//     ]
//   }
// ];


export const questions = [
  {
  id: 1,
  question: "Что делает тег <a> в HTML?",
  answer: "Создает гиперссылку",
  options: [
    "Выводит изображение",
    "Создает гиперссылку",
    "Добавляет кнопку",
    "Создает форму"
  ]
},
{
  id: 2,
  question: "Какое значение у свойства `position` размещает элемент абсолютно относительно ближайшего позиционированного предка?",
  answer: "absolute",
  options: [
    "fixed",
    "relative",
    "absolute",
    "static"
  ]
},
{
  id: 3,
  question: "Какое CSS свойство отвечает за размер шрифта?",
  answer: "font-size",
  options: [
    "font-weight",
    "font-style",
    "font-size",
    "text-size"
  ]
},
{
  id: 4,
  question: "Что делает тег <input> с типом `checkbox`?",
  answer: "Создает флажок",
  options: [
    "Создает поле для пароля",
    "Создает кнопку",
    "Создает выпадающий список",
     "Создает флажок",
  ]
},
{
  id: 5,
  question: "Какой селектор в CSS выбирает элемент по id?",
  answer: "#id",
  options: [
    "#id",
    ".id",
    "*id",
    "/id"
  ]
},
{
  id: 6,
  question: "Что такое `undefined` в JavaScript?",
  answer: "Тип данных, означающий, что переменная объявлена, но не инициализирована",
  options: [
    "Объект без значения",
    "Тип данных, означающий, что переменная объявлена, но не инициализирована",
    "Переменная, содержащая null",
    "Ошибка выполнения"
  ]
},
{
  id: 7,
  question: "Что делает метод `Array.prototype.map()`?",
  answer: "Создает новый массив, применяя функцию к каждому элементу",
  options: [
    "Фильтрует массив",
      "Создает новый массив, применяя функцию к каждому элементу",
    "Удаляет элементы",
    "Сортирует массив"
  ]
},
{
  id: 8,
  question: "Что делает оператор `typeof`?",
  answer: "Возвращает тип данных значения",
  options: [
    "Проверяет тип на совпадение",
    "Возвращает тип данных значения",
    "Создает новый объект",
    "Удаляет свойство объекта"
  ]
},
{
  id: 9,
  question: "Какой результат у `null == undefined`?",
  answer: "true",
  options: [
    "false",
    "true",
    "undefined",
    "null"
  ]
},
{
  id: 10,
  question: "Что делает `isNaN('123')`?",
  answer: "Возвращает false",
  options: [
    "Возвращает true",
    "Вызывает ошибку",
    "Возвращает false",
    "Преобразует строку в число"
  ]
},
{
  id: 11,
  question: "Какое ключевое слово используется для создания функции?",
  answer: "function",
  options: [
    "method",
    "function",
    "const",
    "def"
  ]
},
{
  id: 12,
  question: "Что возвращает `Array.isArray([])`?",
  answer: "true",
  options: [
    "true",
    "false",
    "undefined",
    "null"
  ]
},
{
  id: 13,
  question: "Какое значение вернёт `typeof []`?",
  answer: "object",
  options: [
    "array",
    "object",
    "function",
    "undefined"
  ]
},
{
  id: 14,
  question: "Что делает оператор `!`?",
  answer: "Преобразует значение в противоположное булево",
  options: [
    "Создает цикл",
    "Проверяет тип",
    "Преобразует значение в противоположное булево",
    "Добавляет значение"
  ]
},
{
  id: 15,
  question: "Что делает `return` внутри функции?",
  answer: "Завершает выполнение функции и возвращает значение",
  options: [
    "Начинает новую функцию",
    "Выводит значение в консоль",
    "Завершает выполнение функции и возвращает значение",
    "Удаляет переменную"
  ]
},
{
  id: 16,
  question: "Как объявить стрелочную функцию?",
  answer: "() => {}",
  options: [
    "() => {}",
    "() -> {}",
    "function => {}",
    "(=>) {}"
  ]
},
{
  id: 17,
  question: "Что делает `localStorage.setItem()`?",
  answer: "Сохраняет данные в локальное хранилище браузера",
  options: [
    "Сохраняет данные в базу данных",
    "Удаляет данные из кэша",
    "Сохраняет данные в локальное хранилище браузера",
    "Сохраняет данные в cookies"
  ]
},
{
  id: 18,
  question: "Какая функция используется для таймера в JavaScript?",
  answer: "setTimeout",
  options: [
    "delay()",
    "setTimeout",
    "timeout()",
    "setIntervalOnce"
  ]
},
{
  id: 19,
  question: "Что делает `break` в цикле?",
  answer: "Прерывает выполнение цикла",
  options: [
    "Переходит к следующей итерации",
    "Обнуляет переменные",
    "Прерывает выполнение цикла",
    "Запускает цикл заново"
  ]
},
{
  id: 20,
  question: "Какой метод используется для добавления элемента в конец массива?",
  answer: "push()",
  options: [
        "push()",
    "add()",
    "append()",

    "insert()"
  ]
},
{
  id: 21,
  question: "Как создать объект в JavaScript?",
  answer: "С помощью фигурных скобок",
  options: [
    "С помощью квадратных скобок",
    "С помощью фигурных скобок",
    "С помощью круглых скобок",
    "С помощью угловых скобок"
  ]
},
{
  id: 22,
  question: "Что такое hoisting?",
  answer: "Поднятие объявлений переменных и функций вверх кода",
  options: [
    "Поднятие объявлений переменных и функций вверх кода",
    "Асинхронный вызов функции",
    "Циклическое выполнение",
    "Удаление переменных"
  ]
},
{
  id: 23,
  question: "Что такое event.preventDefault()?",
  answer: "Отменяет стандартное поведение события",
  options: [
    "Удаляет обработчик события",
    "Создает событие",
    "Отменяет стандартное поведение события",
    "Обновляет страницу"
  ]
},
{
  id: 24,
  question: "Что возвращает метод `slice()` у массива?",
  answer: "Новый массив с выбранными элементами",
  options: [
    "Удаляет элементы",
    "Изменяет исходный массив",
    "Новый массив с выбранными элементами",
    "Превращает массив в строку"
  ]
},
{
  id: 25,
  question: "Что делает `JSON.parse()`?",
  answer: "Преобразует JSON-строку в объект",
  options: [
    "Преобразует объект в строку",
    "Преобразует JSON-строку в объект",
    "Удаляет JSON",
    "Шифрует данные"
  ]
},
{
  id: 26,
  question: "Что такое компонент в React?",
  answer: "Функция или класс, возвращающий JSX-разметку",
  options: [
    "HTML-страница",
    "Функция или класс, возвращающий JSX-разметку",
    "CSS-файл",
    "Redux-хранилище"
  ]
},
{
  id: 27,
  question: "Какой хук используется для управления состоянием?",
  answer: "useState",
  options: [
    "useState",
    "useEffect",
    "useRef",
    "useMemo"
  ]
},
{
  id: 28,
  question: "Что такое JSX?",
  answer: "Синтаксис, позволяющий писать HTML-подобный код в JavaScript",
  options: [
    "Фреймворк",
    "Язык стилей",
    "Синтаксис, позволяющий писать HTML-подобный код в JavaScript",
    "База данных"
  ]
},
{
  id: 29,
  question: "Какой атрибут используется для добавления классов в JSX?",
  answer: "className",
  options: [
    "class",
    "css",
    "className",
    "style"
  ]
},
{
  id: 30,
  question: "Когда вызывается хук useEffect?",
  answer: "После рендера компонента",
  options: [
    "До загрузки страницы",
    "Во время объявления компонента",
    "После рендера компонента",
    "Перед удалением проекта"
  ]
}

]





